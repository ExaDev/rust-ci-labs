on:
  workflow_dispatch:
  pull_request:
  push:
    branches: [main]

name: 'Rust'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: 'Build'
    runs-on: ubuntu-latest
    continue-on-error: false
    strategy:
      matrix:
        include:
          - toolchain: stable
          - toolchain: nightly
    steps:
      - uses: actions/checkout@v3
      - uses: Swatinem/rust-cache@v2
      - name: 'Setup Rust'
        run: |
          curl -sSf https://sh.rustup.rs | sh -s -- -y
          rustup toolchain install ${{matrix.toolchain}}
      - name: 'Build'
        run: cargo +${{matrix.toolchain}} build --release
      - uses: actions/upload-artifact@v4
        with:
          name: runtime-${{matrix.toolchain}}
          path: target/release/rust_ci_labs

  release:
    name: Release
    needs: ["build"]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Create tag
        uses: actions/github-script@v5
        with:
          script: |
            github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: 'refs/tags/edge',
              sha: context.sha
            }).catch(err => {
                if (err.status !== 422) throw err;
                github.rest.git.updateRef({
                owner: context.repo.owner,
                repo: context.repo.repo,
                ref: 'refs/tags/edge',
                sha: context.sha
              });
            })
      - uses: actions/download-artifact@v4
        with:
          pattern: runtime-*
          path: release-artifacts/
      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: edge
          body: "Latest commit: ${{ github.event.head_commit.message }}"
          draft: true
          files: |
            release-artifacts/runtime-stable
            release-artifacts/runtime-nightly

  push_to_registries:
    name: Push Docker image to ghcr.io
    runs-on: ubuntu-latest
    needs: ["release"]
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: |
            exadev/rust_ci_labs
            ghcr.io/${{ github.repository }}

      - uses: actions/download-artifact@v4
        with:
          name: runtime-stable
          path: release-artifacts/

      - name: Build and push Docker images
        id: push
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true